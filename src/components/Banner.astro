---
interface Props {
  bg?: string;
	title: string;
	link?: {
    href: string;
    label: string
  };
  hero?: boolean;
}

const { link, title, bg, hero, ...rest } = Astro.props;
---

<div class:list={['banner', {'+hero': hero}]} style={'--_banner-bg:' + bg} {...rest}>
  <slot name="before-title"></slot>
  <h1 class="_title">{title}</h1>
  <slot name="after-title"></slot>
  <p class="_slot"><slot /></p>
  <slot name="before-link"></slot>
  {link && <a>
    <a class="_link" href={link.href}>{link.label}</a>
  </>
  <slot name="after-link"></slot>
  }
</div>

<style lang="scss">
.banner {
  display: flex;
  flex-flow: column;
  align-items: center;
  justify-content: center;
  gap: var(--app-size-5);
  height: 350px;
  border-radius: 32px;
  margin-inline: var(--app-size-5);
  padding-block: var(--app-size-20);
  background-image: var(--_banner-bg, none);
  background-size: cover;
  background-position: center;
  background-color: var(--color-fill-dark);
  color: var(--color-text-primary-inverse);

  :where(._title, ._slot) {
    text-wrap: balance;
  }
  
  ._title {
    color: inherit;
    filter: drop-shadow(2px 3px 6px black);
  }

  ._slot {
    margin-top: var(--app-size-6);
    filter: drop-shadow(1px 2px 4px #444);
  }

  &.\+hero {
    align-items: flex-start;
    justify-content: flex-start;
    gap: var(--app-size-1);
    height: 760px;
    margin-inline: 0;
    padding-inline: var(--app-size-6);
    padding-block: var(--app-size-18);
    border-radius: 100px 0 100px 0;

    :where(._title, ._slot) {
      max-width: 70%;
    }
  }
}
</style>